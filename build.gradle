subprojects {
    apply plugin: 'java'
    apply plugin: 'maven-publish'

    group = 'com.envyful.reforged.bingo'
    version = '3.0.1'

    ext {
        forgeVersion = "none"
    }

    jar {
        setArchiveBaseName("${rootProject.name}-Forge")
    }

    repositories {
        mavenCentral()
        maven { url = "https://oss.sonatype.org/content/repositories/snapshots" }
        maven { url = "https://repo.lucko.me/" }
        maven { url = "https://repo.aikar.co/content/groups/aikar/" }
        maven { url = "https://jitpack.io" }
        maven { url = "https://repo.spongepowered.org/maven" }
        maven { url = "https://maven.envyware.co.uk/releases" }
        ivy {
            setUrl('https://download.nodecdn.net/containers/reforged/server/release')
            metadataSources {
                artifact()
            }
            patternLayout {
                artifact('[revision]/[artifact].[ext]')
            }
        }
    }

    afterEvaluate {
        publishing {
            repositories {
                maven {
                    name = "envyware"
                    url = uri("https://maven.envyware.co.uk/releases")
                    credentials(PasswordCredentials)
                    authentication {
                        basic(BasicAuthentication)
                    }
                }
            }
            publications {
                maven(MavenPublication) {
                    groupId = project.group
                    artifactId = project.name
                    version = project.version
                    artifact("build/libs/${rootProject.name}-Forge-${version}.jar")
                }
            }
        }

        tasks.named("publishMavenPublicationToEnvywareRepository") {
            dependsOn shadowJar
        }

        tasks.register('customPublish') {
            dependsOn 'build'
            dependsOn 'publish'
        }
    }

    task versionedRelease(type: Copy) {
        dependsOn('shadowJar')
        delete fileTree('../release/') {
            include '**/*.jar'
        }
        group "build"
        from("./build/libs/${rootProject.name}-Forge-${version}.jar")
        into('../release/')
        include '*.jar'
        rename { String filename ->
            filename.replace("-${version}.jar", "-${project.version}-${forgeVersion}.jar")
        }
    }
}